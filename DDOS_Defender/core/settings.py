"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config
from django.utils.timezone import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# TODO : SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    "django_celery_results",
    "django_celery_beat",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # TODO : custom middleware comes here
    
    'ddos_guard.middleware.RequestLimitMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # TODO : if you are using traditional Django 
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# TODO : Celery settings
CELERY_BROKER_URL = "redis://localhost:6379"
CELERY_RESULT_BACKEND = "redis://localhost:6379"


# TODO : Change this value as you please
MAX_LIMIT_REQUEST = int(10)


# TODO : Time object to restart counting after certain amount of time
TIME_LAPSE = timedelta(hours=0, minutes=0, seconds=10)


# TODO : Cache framework to manipulate your cronjob and crontab
# CACHES = {
#     # 'default': {
#     #     # TODO : You can change the backend to any part of your app you want
#     #     'BACKEND': 'ddos_guard.cache_backends.MyCustomCacheBackend',
        
#     #     # TODO : Change the path for cache server as you please
#     #     'LOCATION': '127.0.0.1:11211',
#     # },
#     # TODO : If you have Redis database, you can use it here too
#     # 'default': {
#     #     'BACKEND': 'django_redis.cache.RedisCache',
#     #     'LOCATION': 'redis://127.0.0.1:6379/0',
#     #     'OPTIONS': {
#     #         'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#     #     },
#     # }
# }


# TODO: Firewall rules
FIREWALL = [
    {"rule": "block", "ip": "192.168.1.1"},
    {"rule": "allow", "ip": "10.0.0.1"},
]


# TODO: IDS settings
IDS = {
    'enabled': True,
    'sensitivity_level': 'high',
    'log_file': '/var/log/ids.log',
}


# TODO: IPS settings
IPS = {
    'enabled': True,
    'action_on_detection': 'block',
    'log_file': '/var/log/ips.log',
}


# TODO: Threat data loaded
THREAT_DATA_LOADED = "https://example.com/threat-intelligence"
